# Configuración general de Django
SECRET_KEY='django-insecure-s2jui6y+dop-zqf&&^y!fb5#+n)1yec2@j=)=b4gq1wr61xo^#'
DEBUG=True
VITE_API_URL=http://localhost:5000


# Clave de firma ( Signing Key ). Asegúrate de que esto sea correcto para tu aplicación.
# A veces se usa para cosas como tokens de sesión o JWT si no tienes SIMPLE_JWT configurado para otra clave.
# Si tu aplicación no usa explícitamente esta SIGNING_KEY, puedes considerarla opcional o removerla si no se lee en settings.py.
SIGNING_KEY=8fvba1BGam0uSRpMp0sGqoKtYAdhW1gPm

# Configuración de la base de datos PostgreSQL
# Estos valores DEBEN COINCIDIR con los que uses en tu settings.py (para env())
# y con los de tu servicio 'db' en docker-compose.yml
DB_NAME=DataforDummies      # Confirmado: Nombre de tu base de datos
DB_USER=postgres            # Confirmado: Usuario de la base de datos (común para Postgres en desarrollo)
DB_PASSWORD=arleo           # Confirmado: Contraseña de la base de datos
DB_URL = postgresql://postgres:BTRjbfQRNDfAmrUT@db.ebrabmmbfxaxnywdxkov.supabase.co:5432/postgres

# --- ADICIONES IMPORTANTES PARA DOCKER ---

# HOST y PUERTO de la base de datos (PostgreSQL)
# 'db' es el nombre del servicio de PostgreSQL en tu docker-compose.yml.
# ¡Esto es CRUCIAL para que tu Django se conecte a la DB dentro de Docker!
DB_HOST=db
DB_PORT=5432

# Configuración de MongoDB (si la usas)
# 'mongo' es el nombre del servicio de MongoDB en tu docker-compose.yml (si lo has descomentado).
MONGO_URI=mongodb+srv://Deitafordumi:q2TxBelVbreIgbo7@cluster0.vldg8fj.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
MONGO_DB_NAME=datafordummies # Asumiendo este es tu nombre de DB para Mongo.

# Configuración de Redis (para Django Channels)
# 'redis' es el nombre del servicio de Redis en tu docker-compose.yml.
REDIS_HOST=redis
REDIS_PORT=6379

# Configuración de Email (para Djoser, etc.)
# Estos valores se usarán en settings.py
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=fl0r1d4.d4t4@gmail.com
EMAIL_HOST_PASSWORD=updrfeskqxymoccr # <-- Asegúrate que esta sea tu "contraseña de aplicación" si usas 2FA en Gmail.
EMAIL_USE_TLS=True # Puedes cambiar a False si tu servidor de correo no usa TLS, pero True es lo común.

# Configuración de la API Key de OpenRouter (si tu aplicación la usa)
OPENROUTER_API_KEY="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"
VITE_API_URL=http://localhost:5000

REDIS_URL=redis://default:xjHUrMwfSkBJqDJAygIpTEETJJhSAdsG@shinkansen.proxy.rlwy.net:31315
NEXT_PUBLIC_WS_BASE_URL=backend:8000

DEBUG=True               # Modo desarrollo (False en producción)
SECRET_KEY='django-insecure-s2jui6y+dop-zqf&&^y!fb5#+n)1yec2@j=)=b4gq1wr61xo^#'

# Para ALLOWED_HOSTS en settings.py. Añade IPs/dominios adicionales si necesitas que otros accedan por IP.
# Si quieres que tu IP local se incluya en ALLOWED_HOSTS automáticamente.
# Por ejemplo, si tu computadora tiene la IP 192.168.1.100 en tu red local:
# ALLOWED_HOSTS_DOCKER=192.168.1.100
ALLOWED_HOSTS_DOCKER=